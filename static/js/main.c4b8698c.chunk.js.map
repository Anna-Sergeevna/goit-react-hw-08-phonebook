{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Loader/Loader.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.jsx","components/Section/Section.jsx","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Loader/Loader.jsx","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContact","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","name","phone","post","deleteContact","id","delete","changeFilter","createAction","items","createReducer","fulfilled","payload","state","filter","loading","pending","rejected","error","combineReducers","store","configureStore","reducer","contacts","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","Container","title","children","className","s","container","Section","section","getLoading","getContacts","getFilter","getVisibleContacts","normalizeFilter","toLowerCase","trim","contact","includes","ContactForm","useState","setName","setPhone","useSelector","contactsSelectors","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","map","toast","contactsOperations","success","text","type","pattern","required","input","onChange","disabled","button","Filter","contactsActions","ContactList","useEffect","list","item","onClick","onDeleteContact","Loading","loader","color","height","width","timeout","App","isLoadingContacts","Loader","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4b8698c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactForm_text__3j3GS\",\"input\":\"ContactForm_input__2OdoI\",\"button\":\"ContactForm_button__1OkaT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__16D9a\",\"item\":\"ContactList_item__2VKAr\",\"name\":\"ContactList_name__3nluz\",\"button\":\"ContactList_button__1Js53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1A7AD\",\"title\":\"Container_title__1YIf2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1wVP4\",\"title\":\"Section_title__2ln0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2Nf4O\",\"text\":\"Filter_text__2xlOo\",\"input\":\"Filter_input__38GCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1kyYC\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61bb7695e943920017784ed1.mockapi.io/api/v1';\r\n\r\nexport const fetchContact = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\n// export const fetchContact = () => async dispatch => {\r\n//   dispatch(fetchContactRequst());\r\n\r\n//   try {\r\n//     const { data } = await axios.get('/contacts');\r\n\r\n//     dispatch(fetchContactSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactError(error));\r\n//   }\r\n\r\n//   // axios\r\n//   //   .get('/contacts')\r\n//   //   .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n//   //   .catch(error => dispatch(fetchContactError(error)));\r\n// };\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, phone }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', { name, phone });\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\n// export const addContact =\r\n//   ({ name, phone }) =>\r\n//   async dispatch => {\r\n//     const contact = {\r\n//       name,\r\n//       phone,\r\n//     };\r\n\r\n//     dispatch(addContactRequst());\r\n\r\n//     try {\r\n//       const { data } = await axios.post('/contacts', contact);\r\n\r\n//       dispatch(addContactSuccess(data));\r\n//     } catch (error) {\r\n//       dispatch(addContactError(error));\r\n//     }\r\n//   };\r\n\r\n// export const deleteContact = id => dispatch => {\r\n//   dispatch(deleteContactRequst());\r\n\r\n//   axios\r\n//     .delete(`/contacts/${id}`)\r\n//     .then(() => dispatch(deleteContactSuccess(id)))\r\n//     .catch(error => dispatch(deleteContactError(error)));\r\n// };\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/filter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContact,\r\n  addContact,\r\n  deleteContact,\r\n} from 'redux/contacts/contacts-operations';\r\nimport { changeFilter } from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContact.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContact.pending]: () => true,\r\n  [fetchContact.fulfilled]: () => false,\r\n  [fetchContact.rejected]: () => false,\r\n\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContact.rejected]: (_, { payload }) => payload,\r\n  [fetchContact.rejected]: () => null,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactReducer from './contacts/contacts-reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <section className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","export const getLoading = state => state.contacts.loading;\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizeFilter = filter.toLowerCase().trim();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-hot-toast';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts/index';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const haldleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    contacts.map(contact => contact.name).includes(name)\r\n      ? toast.error(`${name} is already in contacts.`)\r\n      : dispatch(contactsOperations.addContact({ name, phone }));\r\n\r\n    reset();\r\n    toast.success('Add contact');\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    // <form onSubmit={haldleSubmit} autoComplete='off'>\r\n    <form onSubmit={haldleSubmit}>\r\n      <label>\r\n        <p className={s.text}>Name</p>\r\n        <input\r\n          type='text'\r\n          name='name'\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={s.input}\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        <p className={s.text}>Phone</p>\r\n        <input\r\n          type='tel'\r\n          name='phone'\r\n          pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n          title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n          required\r\n          className={s.input}\r\n          value={phone}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type='submit' disabled={!name} className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsActions, contactsSelectors } from 'redux/contacts/index';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter() {\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label>\r\n      <p className={s.text}>Find contacts by name</p>\r\n      <input\r\n        type='text'\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        className={s.input}\r\n        value={value}\r\n        onChange={e =>\r\n          dispatch(contactsActions.changeFilter(e.currentTarget.value))\r\n        }\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-hot-toast';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts/index';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id =>\r\n    dispatch(\r\n      contactsOperations.deleteContact(id),\r\n      toast.success('Delete contact'),\r\n    );\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContact());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, phone }) => (\r\n        <li key={id} className={s.item}>\r\n          <p className={s.name}>{name}:</p>\r\n          <p className={s.phone}>{phone}</p>\r\n\r\n          <button\r\n            type='button'\r\n            className={s.button}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className={s.loader}>\r\n      <Loader\r\n        type='ThreeDots'\r\n        color='#00BFFF'\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useSelector } from 'react-redux';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport Container from 'components/Container';\r\nimport Section from 'components/Section';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\nimport { getLoading } from './redux/contacts/contacts-selectors';\r\nimport Loader from 'components/Loader';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const isLoadingContacts = useSelector(getLoading);\r\n\r\n  return (\r\n    <Container title=''>\r\n      <Section title='Phonebook'>\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      {isLoadingContacts && <Loader />}\r\n\r\n      <Section title='Contacts'>\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n      <Toaster position='top-right' />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}